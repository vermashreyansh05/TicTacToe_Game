{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Desktop/Shreyansh/ReactJS/tictaktoe/src/component/screen/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { render } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport DashboardScreen from './DashboardScreen';\nimport Main from './main';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = propScreen => {\n  _s();\n  const [propsData, setpropsData] = useState([]);\n  const [screen, setScreen] = useState(\"\");\n  // useEffect(()=>{\n  //     setScreen(\"dashboard\")\n  // },[])\n  debugger;\n  // setScreen(propScreen)\n  const setPara = e => {\n    debugger;\n    // e.preventDefault()\n    if (propScreen) {\n      setScreen(\"\");\n    } else {\n      debugger;\n      setScreen(\"\");\n    }\n  };\n  if (propScreen.length === 1) {\n    setPara(\"\");\n  }\n  const handleChange = userChoice => {\n    setScreen(userChoice);\n    setpropsData = {\n      \"screenChoice\": userChoice,\n      \"newProps\": \"\"\n    };\n    debugger;\n  };\n  const dashBoardScreen = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: screen === \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"20%\",\n          marginLeft: \"40%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChange(\"single_player\"),\n          className: \"btn btn-warning\",\n          children: \"Single Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            width: \"10%\",\n            marginLeft: \"45%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 115\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => handleChange(\"multi_player\"),\n          className: \"btn btn-danger\",\n          children: \"Multi Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Main, {\n      Uchoice: propsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"hnkmSBevblIAHI5CQi4dRdKXs4o=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["render","React","useEffect","useState","Link","DashboardScreen","Main","Dashboard","propScreen","propsData","setpropsData","screen","setScreen","setPara","e","length","handleChange","userChoice","dashBoardScreen","width","marginLeft"],"sources":["/home/freedom/Desktop/Shreyansh/ReactJS/tictaktoe/src/component/screen/Dashboard.jsx"],"sourcesContent":["import { render } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport DashboardScreen from './DashboardScreen';\nimport Main from './main';\n\nconst Dashboard = (propScreen) => {\n    const [propsData,setpropsData] = useState([])\n    const [screen,setScreen] = useState(\"\")\n    // useEffect(()=>{\n    //     setScreen(\"dashboard\")\n    // },[])\n    debugger\n    // setScreen(propScreen)\n    const setPara = (e) => {\n            debugger\n            // e.preventDefault()\n            if (propScreen) {\n                setScreen(\"\")\n            }\n            else{\n                debugger\n                setScreen(\"\")\n            }\n    }\n\n    if(propScreen.length===1){\n        setPara(\"\")\n    }\n    \n       \n        const handleChange = (userChoice) => {\n            setScreen(userChoice)\n            setpropsData = {\n                \"screenChoice\":userChoice,\n                \"newProps\":\"\"\n            }\n            debugger\n        }\n\n    const dashBoardScreen = () =>{\n        return(\n            <>\n            \n            </>\n        )\n    }\n\n    return(\n        <>\n        { screen === \"\" ? (<>\n            <h1>Dashboard</h1><hr />\n            <h1>Tic Tac Toe</h1><hr style={{width:\"20%\", marginLeft:\"40%\"}}/>\n            <div className='container'>\n            <button onClick={()=>handleChange(\"single_player\")} className='btn btn-warning'>Single Player</button><hr style={{width:\"10%\", marginLeft:\"45%\"}} />\n            <Link onClick={()=>handleChange(\"multi_player\")} className='btn btn-danger'>Multi Player</Link>\n            </div>\n            </>)\n         : \n            <Main Uchoice={propsData}/>} \n        </>\n    )\n}\n\n\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAAA;AAE1B,MAAMC,SAAS,GAAIC,UAAU,IAAK;EAAA;EAC9B,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACQ,MAAM,EAACC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACvC;EACA;EACA;EACA;EACA;EACA,MAAMU,OAAO,GAAIC,CAAC,IAAK;IACf;IACA;IACA,IAAIN,UAAU,EAAE;MACZI,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,MACG;MACA;MACAA,SAAS,CAAC,EAAE,CAAC;IACjB;EACR,CAAC;EAED,IAAGJ,UAAU,CAACO,MAAM,KAAG,CAAC,EAAC;IACrBF,OAAO,CAAC,EAAE,CAAC;EACf;EAGI,MAAMG,YAAY,GAAIC,UAAU,IAAK;IACjCL,SAAS,CAACK,UAAU,CAAC;IACrBP,YAAY,GAAG;MACX,cAAc,EAACO,UAAU;MACzB,UAAU,EAAC;IACf,CAAC;IACD;EACJ,CAAC;EAEL,MAAMC,eAAe,GAAG,MAAK;IACzB,oBACI,qCAEG;EAEX,CAAC;EAED,oBACI;IAAA,UACEP,MAAM,KAAK,EAAE,gBAAI;MAAA,wBACf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;QAAA;QAAA;QAAA;MAAA,QAAM,eACxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;QAAI,KAAK,EAAE;UAACQ,KAAK,EAAC,KAAK;UAAEC,UAAU,EAAC;QAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACjE;QAAK,SAAS,EAAC,WAAW;QAAA,wBAC1B;UAAQ,OAAO,EAAE,MAAIJ,YAAY,CAAC,eAAe,CAAE;UAAC,SAAS,EAAC,iBAAiB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;UAAI,KAAK,EAAE;YAACG,KAAK,EAAC,KAAK;YAAEC,UAAU,EAAC;UAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eACpJ,QAAC,IAAI;UAAC,OAAO,EAAE,MAAIJ,YAAY,CAAC,cAAc,CAAE;UAAC,SAAS,EAAC,gBAAgB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB;MAAA;QAAA;QAAA;QAAA;MAAA,QACzF;IAAA,gBACH,gBAEH,QAAC,IAAI;MAAC,OAAO,EAAEP;IAAU;MAAA;MAAA;MAAA;IAAA;EAAE,iBAC5B;AAEX,CAAC;AAAA,GAxDKF,SAAS;AAAA,KAATA,SAAS;AA2Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}