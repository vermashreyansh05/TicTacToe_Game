{"ast":null,"code":"import { render } from '@testing-library/react';\nimport React from 'react';\nimport Main from '../screen/main';\nconst arrayOfElement = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '];\nvar choice = \"X\";\nvar steps = 0;\nconst winning = [[0, 4, 8], [2, 4, 6], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 1, 2], [3, 4, 5], [6, 7, 8]];\nfunction checkStatus() {\n  steps += 1;\n  let gameStatus = true;\n  if (steps > 4 && gameStatus === true) {\n    for (let i = 0; i < 8; i++) {\n      for (let element in winning) {\n        console.log(winning[element]);\n        let winningCondition = winning[element];\n        // if (winning[element] in arrayOfElement === \"X\" || winning[element] in arrayOfElement === \"O\"  ){\n        //     console.warn(\"Game Over\")\n        //     debugger    \n        //     break\n        // }\n        for (let j in winningCondition) {\n          debugger;\n          let finalCondition = winningCondition[j];\n          if (arrayOfElement[finalCondition] === \"X\") {\n            console.warn(\"X at\", [finalCondition]);\n            debugger;\n            // alert(\"Game Over!...X Won...\")\n          }\n          // else{\n          //     console.warn(\"X Not at\", [finalCondition])\n          //     debugger\n          //     break\n          // }\n          else if (winningCondition[j] === \"O\") {\n            console.warn(\"OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\");\n            alert(\"Game Over!....OOOO Won\");\n            break;\n          }\n          debugger;\n          console.log(\"Winning Condition....\");\n          gameStatus = false;\n        }\n      }\n      debugger;\n    }\n  }\n}\nfunction MultiPlayer(props) {\n  debugger;\n  arrayOfElement[props] = choice;\n  checkStatus();\n  if (choice === \"X\") {\n    choice = \"O\";\n  } else {\n    choice = \"X\";\n  }\n  debugger;\n  return Main(\"multi_player\", arrayOfElement)\n  // <>\n  // <Main newData={arrayOfElement}/>\n  // </>\n  ;\n}\n_c = MultiPlayer;\nexport default MultiPlayer;\nvar _c;\n$RefreshReg$(_c, \"MultiPlayer\");","map":{"version":3,"names":["render","React","Main","arrayOfElement","choice","steps","winning","checkStatus","gameStatus","i","element","console","log","winningCondition","j","finalCondition","warn","alert","MultiPlayer","props"],"sources":["/home/freedom/Desktop/Shreyansh/ReactJS/tictaktoe/src/component/data/MultiPlayer.jsx"],"sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\nimport Main from '../screen/main';\n\n\nconst arrayOfElement = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']\nvar choice = \"X\"\nvar steps = 0\nconst winning = [[0,4,8],[2,4,6],[0,3,6],[1,4,7],[2,5,8],[0,1,2],[3,4,5],[6,7,8]] \nfunction checkStatus () {\n    steps += 1\n    let gameStatus = true\n    if (steps>4 && gameStatus === true){\n        for (let i = 0; i<8;i++){\n            for (let element in winning){\n                console.log(winning[element])\n                let winningCondition = winning[element]\n                // if (winning[element] in arrayOfElement === \"X\" || winning[element] in arrayOfElement === \"O\"  ){\n                //     console.warn(\"Game Over\")\n                //     debugger    \n                //     break\n                // }\n                for(let j in winningCondition){\n                    debugger\n                    let finalCondition = winningCondition[j]\n                    if (arrayOfElement[finalCondition] === \"X\"){\n                        console.warn(\"X at\", [finalCondition])\n                        debugger\n                        // alert(\"Game Over!...X Won...\")\n                    }\n                    // else{\n                    //     console.warn(\"X Not at\", [finalCondition])\n                    //     debugger\n                    //     break\n                    // }\n                    else if (winningCondition[j]===\"O\"){\n                        console.warn(\"OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\")\n                        alert(\"Game Over!....OOOO Won\")\n                        break\n                    }\n                    debugger\n                    console.log(\"Winning Condition....\")\n                    gameStatus = false\n                }\n\n            }\n            debugger\n        }\n    }\n\n}\n\n\nfunction MultiPlayer (props) {\n    debugger\n    arrayOfElement[props] = choice\n    checkStatus()\n    if (choice===\"X\"){\n        choice = \"O\"\n    }\n    else{\n        choice=\"X\"\n    }\n    debugger\n    return(\n        Main(\"multi_player\",arrayOfElement)\n        // <>\n        // <Main newData={arrayOfElement}/>\n        // </>\n    )\n    \n}\n\nexport default MultiPlayer"],"mappings":"AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,gBAAgB;AAGjC,MAAMC,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACpE,IAAIC,MAAM,GAAG,GAAG;AAChB,IAAIC,KAAK,GAAG,CAAC;AACb,MAAMC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACjF,SAASC,WAAW,GAAI;EACpBF,KAAK,IAAI,CAAC;EACV,IAAIG,UAAU,GAAG,IAAI;EACrB,IAAIH,KAAK,GAAC,CAAC,IAAIG,UAAU,KAAK,IAAI,EAAC;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAAC;MACpB,KAAK,IAAIC,OAAO,IAAIJ,OAAO,EAAC;QACxBK,OAAO,CAACC,GAAG,CAACN,OAAO,CAACI,OAAO,CAAC,CAAC;QAC7B,IAAIG,gBAAgB,GAAGP,OAAO,CAACI,OAAO,CAAC;QACvC;QACA;QACA;QACA;QACA;QACA,KAAI,IAAII,CAAC,IAAID,gBAAgB,EAAC;UAC1B;UACA,IAAIE,cAAc,GAAGF,gBAAgB,CAACC,CAAC,CAAC;UACxC,IAAIX,cAAc,CAACY,cAAc,CAAC,KAAK,GAAG,EAAC;YACvCJ,OAAO,CAACK,IAAI,CAAC,MAAM,EAAE,CAACD,cAAc,CAAC,CAAC;YACtC;YACA;UACJ;UACA;UACA;UACA;UACA;UACA;UAAA,KACK,IAAIF,gBAAgB,CAACC,CAAC,CAAC,KAAG,GAAG,EAAC;YAC/BH,OAAO,CAACK,IAAI,CAAC,0CAA0C,CAAC;YACxDC,KAAK,CAAC,wBAAwB,CAAC;YAC/B;UACJ;UACA;UACAN,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;UACpCJ,UAAU,GAAG,KAAK;QACtB;MAEJ;MACA;IACJ;EACJ;AAEJ;AAGA,SAASU,WAAW,CAAEC,KAAK,EAAE;EACzB;EACAhB,cAAc,CAACgB,KAAK,CAAC,GAAGf,MAAM;EAC9BG,WAAW,EAAE;EACb,IAAIH,MAAM,KAAG,GAAG,EAAC;IACbA,MAAM,GAAG,GAAG;EAChB,CAAC,MACG;IACAA,MAAM,GAAC,GAAG;EACd;EACA;EACA,OACIF,IAAI,CAAC,cAAc,EAACC,cAAc;EAClC;EACA;EACA;EAAA;AAGR;AAAC,KAlBQe,WAAW;AAoBpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}