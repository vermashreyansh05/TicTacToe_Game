{"ast":null,"code":"import { render } from '@testing-library/react';\nimport axios from 'axios';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Dashboard from '../screen/Dashboard';\nimport Main from '../screen/main';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiPlayerData = async props => {\n  debugger;\n  if (props[1] === \"reset\") {\n    const resp = await axios.get(`http://localhost:4000/multi_player?board=${props[0]}&reset=true`);\n    console.log('reset', resp);\n  } else {\n    const resp = await axios.get(`http://localhost:4000/multi_player?board=${props}`);\n    debugger;\n    console.log('chance', resp);\n    if (resp.data.game_result.result) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [alert(\"game OVer....\", resp.data.game_result.result), Dashboard()]\n      }, void 0, true);\n    }\n  }\n};\n_c = MultiPlayerData;\nconst SinglePlayerData = async props => {\n  const boardData = {\n    board: \"\"\n  };\n  if (props.length === 2) {\n    const resp = await axios.get(`http://localhost:4000/single_player?board=${props[0]}&reset=true`);\n    console.log('reset resp', resp);\n  } else {\n    const resp = await axios.get(`http://localhost:4000/single_player?board=${props}`);\n    debugger;\n    console.log(\"chance resp\", resp);\n    // console.warn('Board = ',resp.data.current_board.board)\n    boardData[\"board\"] = resp.data.current_board.board;\n    console.log('boardData= ', boardData);\n  }\n  debugger;\n  // return(\n  //     <Dashboard/>\n  // )\n};\n_c2 = SinglePlayerData;\nexport { MultiPlayerData, SinglePlayerData };\nvar _c, _c2;\n$RefreshReg$(_c, \"MultiPlayerData\");\n$RefreshReg$(_c2, \"SinglePlayerData\");","map":{"version":3,"names":["render","axios","React","useNavigate","Dashboard","Main","MultiPlayerData","props","resp","get","console","log","data","game_result","result","alert","SinglePlayerData","boardData","board","length","current_board"],"sources":["/home/freedom/Desktop/Shreyansh/ReactJS/tictaktoe/src/component/data/Data.jsx"],"sourcesContent":["import { render } from '@testing-library/react';\nimport axios from 'axios';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Dashboard from '../screen/Dashboard';\nimport Main from '../screen/main';\n\nconst MultiPlayerData = async(props) => {\n    debugger\n    if (props[1]===\"reset\"){\n        const resp = await axios.get(`http://localhost:4000/multi_player?board=${props[0]}&reset=true`)    \n        console.log('reset',resp)\n    }\n    else {\n        const resp = await axios.get(`http://localhost:4000/multi_player?board=${props}`)\n        debugger\n        console.log('chance',resp)\n        if (resp.data.game_result.result){\n            return(\n                <>\n                    {alert(\"game OVer....\",resp.data.game_result.result)}\n                    {Dashboard()}\n                </>\n            )\n        }\n    }\n    \n}\n\nconst SinglePlayerData = async(props) => {\n    const boardData = {\n        board:\"\"\n    }\n    if (props.length===2){\n        const resp = await axios.get(`http://localhost:4000/single_player?board=${props[0]}&reset=true`)    \n        console.log('reset resp',resp)\n    }\n    else{\n        const resp = await axios.get(`http://localhost:4000/single_player?board=${props}`)\n        debugger\n        console.log(\"chance resp\",resp)\n        // console.warn('Board = ',resp.data.current_board.board)\n        boardData[\"board\"] = resp.data.current_board.board\n        console.log('boardData= ',boardData)\n    }\n    debugger\n    // return(\n    //     <Dashboard/>\n    // )\n}\n\n\nexport {MultiPlayerData,SinglePlayerData};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,IAAI,MAAM,gBAAgB;AAAC;AAAA;AAElC,MAAMC,eAAe,GAAG,MAAMC,KAAK,IAAK;EACpC;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAG,OAAO,EAAC;IACnB,MAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,4CAA2CF,KAAK,CAAC,CAAC,CAAE,aAAY,CAAC;IAC/FG,OAAO,CAACC,GAAG,CAAC,OAAO,EAACH,IAAI,CAAC;EAC7B,CAAC,MACI;IACD,MAAMA,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,4CAA2CF,KAAM,EAAC,CAAC;IACjF;IACAG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACH,IAAI,CAAC;IAC1B,IAAIA,IAAI,CAACI,IAAI,CAACC,WAAW,CAACC,MAAM,EAAC;MAC7B,oBACI;QAAA,WACKC,KAAK,CAAC,eAAe,EAACP,IAAI,CAACI,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,EACnDV,SAAS,EAAE;MAAA,gBACb;IAEX;EACJ;AAEJ,CAAC;AAAA,KApBKE,eAAe;AAsBrB,MAAMU,gBAAgB,GAAG,MAAMT,KAAK,IAAK;EACrC,MAAMU,SAAS,GAAG;IACdC,KAAK,EAAC;EACV,CAAC;EACD,IAAIX,KAAK,CAACY,MAAM,KAAG,CAAC,EAAC;IACjB,MAAMX,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,6CAA4CF,KAAK,CAAC,CAAC,CAAE,aAAY,CAAC;IAChGG,OAAO,CAACC,GAAG,CAAC,YAAY,EAACH,IAAI,CAAC;EAClC,CAAC,MACG;IACA,MAAMA,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,6CAA4CF,KAAM,EAAC,CAAC;IAClF;IACAG,OAAO,CAACC,GAAG,CAAC,aAAa,EAACH,IAAI,CAAC;IAC/B;IACAS,SAAS,CAAC,OAAO,CAAC,GAAGT,IAAI,CAACI,IAAI,CAACQ,aAAa,CAACF,KAAK;IAClDR,OAAO,CAACC,GAAG,CAAC,aAAa,EAACM,SAAS,CAAC;EACxC;EACA;EACA;EACA;EACA;AACJ,CAAC;AAAA,MApBKD,gBAAgB;AAuBtB,SAAQV,eAAe,EAACU,gBAAgB;AAAE;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}