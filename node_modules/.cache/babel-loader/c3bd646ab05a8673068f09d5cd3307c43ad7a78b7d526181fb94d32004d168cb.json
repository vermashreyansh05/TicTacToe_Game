{"ast":null,"code":"var _s = $RefreshSig$();\nimport { render } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Dashboard from \"../screen/Dashboard\";\nimport Main from \"../screen/main\";\nconst MultiPlayerData = async props => {\n  debugger;\n  if (props.length === 2) {\n    debugger;\n    const resp = await axios.get(`http://localhost:4000/multi_player?board=${props[0]}&reset=true`);\n    console.log(\"reset\", resp);\n  } else {\n    debugger;\n    const resp = await axios.get(`http://localhost:4000/multi_player?board=${props}`);\n    debugger;\n    console.log(\"chance\", resp);\n    if (resp.data.game_result.result) {\n      {\n        alert(\"GAme Over...\", resp.data.game_result.result);\n      }\n    }\n  }\n};\n_c = MultiPlayerData;\nconst RenderData = props => {\n  _s();\n  const [newData, setNewdata] = useState([]);\n  setNewdata(props);\n  render(Main(newData));\n};\n_s(RenderData, \"E0i9O1gk5hBG7dqSgfhq+KPqOCo=\");\n_c2 = RenderData;\nconst SinglePlayerData = async props => {\n  let count = 0;\n  debugger;\n  if (props.length === 2) {\n    debugger;\n    const resp = await axios.get(`http://localhost:4000/single_player?board=${props[0]}&reset=true`);\n    console.log(\"reset resp\", resp);\n  } else {\n    count += 1;\n    debugger;\n    const resp = await axios.get(\"http://localhost:4000/single_player?board=\" + props);\n    debugger;\n    let board = resp.data.current_board.board;\n    let splitBoard = board.split(\"\");\n    if (splitBoard.length < 9) {\n      while (splitBoard.length < 9) {\n        splitBoard.push(\" \");\n      }\n      let newBoard = splitBoard.join(\"\");\n      debugger;\n      localStorage.setItem(\"splitBoard\", newBoard);\n      console.log(\"newBoard = \", newBoard);\n    } else {\n      let newBoard = splitBoard.join(\"\");\n      localStorage.setItem(\"splitBoard\", newBoard);\n      console.log(\"newBoard = \", newBoard);\n    }\n  }\n  debugger;\n  render(Main(\"single_player\", count));\n};\n_c3 = SinglePlayerData;\nexport { MultiPlayerData, SinglePlayerData, RenderData };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MultiPlayerData\");\n$RefreshReg$(_c2, \"RenderData\");\n$RefreshReg$(_c3, \"SinglePlayerData\");","map":{"version":3,"names":["render","axios","React","useEffect","useState","Dashboard","Main","MultiPlayerData","props","length","resp","get","console","log","data","game_result","result","alert","RenderData","newData","setNewdata","SinglePlayerData","count","board","current_board","splitBoard","split","push","newBoard","join","localStorage","setItem"],"sources":["/home/abc/Desktop/Shreyansh_data/Shreyansh/ReactJS Projects/tictaktoe/src/component/data/Data.jsx"],"sourcesContent":["import { render } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Dashboard from \"../screen/Dashboard\";\nimport Main from \"../screen/main\";\n\nconst MultiPlayerData = async (props) => {\n  debugger;\n  if (props.length === 2) {\n    debugger;\n    const resp = await axios.get(\n      `http://localhost:4000/multi_player?board=${props[0]}&reset=true`\n    );\n    console.log(\"reset\", resp);\n  } else {\n    debugger;\n    const resp = await axios.get(\n      `http://localhost:4000/multi_player?board=${props}`\n    );\n    debugger;\n    console.log(\"chance\", resp);\n    if (resp.data.game_result.result) {\n      {\n        alert(\"GAme Over...\", resp.data.game_result.result);\n      }\n    }\n  }\n};\nconst RenderData = (props) => {\n  const [newData, setNewdata] = useState([]);\n\n  setNewdata(props);\n\n  render(Main(newData));\n};\n\nconst SinglePlayerData = async (props) => {\n  let count = 0;\n  debugger;\n  if (props.length === 2) {\n    debugger;\n    const resp = await axios.get(\n      `http://localhost:4000/single_player?board=${props[0]}&reset=true`\n    );\n    console.log(\"reset resp\", resp);\n  } else {\n    count += 1;\n    debugger;\n    const resp = await axios.get(\n      \"http://localhost:4000/single_player?board=\" + props\n    );\n    debugger;\n    let board = resp.data.current_board.board;\n    let splitBoard = board.split(\"\");\n    if (splitBoard.length < 9) {\n      while (splitBoard.length < 9) {\n        splitBoard.push(\" \");\n      }\n      let newBoard = splitBoard.join(\"\");\n      debugger;\n      localStorage.setItem(\"splitBoard\", newBoard);\n      console.log(\"newBoard = \", newBoard);\n    } else {\n      let newBoard = splitBoard.join(\"\");\n      localStorage.setItem(\"splitBoard\", newBoard);\n      console.log(\"newBoard = \", newBoard);\n    }\n  }\n  debugger;\n  render(Main(\"single_player\", count));\n};\n\nexport { MultiPlayerData, SinglePlayerData, RenderData };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}