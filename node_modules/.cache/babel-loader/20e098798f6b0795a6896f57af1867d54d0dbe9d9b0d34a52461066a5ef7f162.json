{"ast":null,"code":"var _s = $RefreshSig$();\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\nimport React from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport Dashboard from '../screen/Dashboard';\nimport Main from '../screen/main';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiPlayerData = async props => {\n  _s();\n  let navigate = useNavigate();\n  debugger;\n  if (props.length === 3) {\n    debugger;\n    const resp = await axios.get(`http://localhost:4000/multi_player?board=${props[0]}&reset=true`);\n    console.log('reset', resp);\n  } else {\n    const resp = await axios.get(`http://localhost:4000/multi_player?board=${props}`);\n    debugger;\n    console.log('chance', resp);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [alert(\"game OVer....Please Reset\", resp.data.game_result.result), navigate('/')]\n    }, void 0, true);\n  }\n};\n_s(MultiPlayerData, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = MultiPlayerData;\nconst SinglePlayerData = async props => {\n  const boardData = {\n    board: \"\"\n  };\n  if (props.length === 2) {\n    const resp = await axios.get(`http://localhost:4000/single_player?board=${props[0]}&reset=true`);\n    console.log('reset resp', resp);\n  } else {\n    const resp = await axios.get(`http://localhost:4000/single_player?board=${props}`);\n    debugger;\n    console.log(\"chance resp\", resp);\n    // console.warn('Board = ',resp.data.current_board.board)\n    boardData[\"board\"] = resp.data.current_board.board;\n    console.log('boardData= ', boardData);\n  }\n  debugger;\n  // return(\n  //     <Dashboard/>\n  // )\n};\n_c2 = SinglePlayerData;\nexport { MultiPlayerData, SinglePlayerData };\nvar _c, _c2;\n$RefreshReg$(_c, \"MultiPlayerData\");\n$RefreshReg$(_c2, \"SinglePlayerData\");","map":{"version":3,"names":["render","axios","React","Navigate","useNavigate","Dashboard","Main","MultiPlayerData","props","navigate","length","resp","get","console","log","alert","data","game_result","result","SinglePlayerData","boardData","board","current_board"],"sources":["/home/freedom/Desktop/Shreyansh/ReactJS/tictaktoe/src/component/data/Data.jsx"],"sourcesContent":["import { render } from '@testing-library/react';\nimport axios from 'axios';\nimport React from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport Dashboard from '../screen/Dashboard';\nimport Main from '../screen/main';\n\nconst MultiPlayerData = async(props) => {\n    let navigate = useNavigate()\n    debugger\n    if (props.length===3){\n        debugger\n        const resp = await axios.get(`http://localhost:4000/multi_player?board=${props[0]}&reset=true`)    \n        console.log('reset',resp)\n    }\n    else {\n        const resp = await axios.get(`http://localhost:4000/multi_player?board=${props}`)\n        debugger\n        console.log('chance',resp)\n        \n            return(\n                <>\n                    {alert(\"game OVer....Please Reset\",resp.data.game_result.result)}\n                    {navigate('/')}\n                </>\n            )\n        \n    }\n    \n}\n\nconst SinglePlayerData = async(props) => {\n    const boardData = {\n        board:\"\"\n    }\n    if (props.length===2){\n        const resp = await axios.get(`http://localhost:4000/single_player?board=${props[0]}&reset=true`)    \n        console.log('reset resp',resp)\n    }\n    else{\n        const resp = await axios.get(`http://localhost:4000/single_player?board=${props}`)\n        debugger\n        console.log(\"chance resp\",resp)\n        // console.warn('Board = ',resp.data.current_board.board)\n        boardData[\"board\"] = resp.data.current_board.board\n        console.log('boardData= ',boardData)\n    }\n    debugger\n    // return(\n    //     <Dashboard/>\n    // )\n}\n\n\nexport {MultiPlayerData,SinglePlayerData};"],"mappings":";AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,IAAI,MAAM,gBAAgB;AAAC;AAAA;AAElC,MAAMC,eAAe,GAAG,MAAMC,KAAK,IAAK;EAAA;EACpC,IAAIC,QAAQ,GAAGL,WAAW,EAAE;EAC5B;EACA,IAAII,KAAK,CAACE,MAAM,KAAG,CAAC,EAAC;IACjB;IACA,MAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,4CAA2CJ,KAAK,CAAC,CAAC,CAAE,aAAY,CAAC;IAC/FK,OAAO,CAACC,GAAG,CAAC,OAAO,EAACH,IAAI,CAAC;EAC7B,CAAC,MACI;IACD,MAAMA,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,4CAA2CJ,KAAM,EAAC,CAAC;IACjF;IACAK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACH,IAAI,CAAC;IAEtB,oBACI;MAAA,WACKI,KAAK,CAAC,2BAA2B,EAACJ,IAAI,CAACK,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,EAC/DT,QAAQ,CAAC,GAAG,CAAC;IAAA,gBACf;EAGf;AAEJ,CAAC;AAAA,GAtBKF,eAAe;EAAA,QACFH,WAAW;AAAA;AAAA,KADxBG,eAAe;AAwBrB,MAAMY,gBAAgB,GAAG,MAAMX,KAAK,IAAK;EACrC,MAAMY,SAAS,GAAG;IACdC,KAAK,EAAC;EACV,CAAC;EACD,IAAIb,KAAK,CAACE,MAAM,KAAG,CAAC,EAAC;IACjB,MAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,6CAA4CJ,KAAK,CAAC,CAAC,CAAE,aAAY,CAAC;IAChGK,OAAO,CAACC,GAAG,CAAC,YAAY,EAACH,IAAI,CAAC;EAClC,CAAC,MACG;IACA,MAAMA,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,6CAA4CJ,KAAM,EAAC,CAAC;IAClF;IACAK,OAAO,CAACC,GAAG,CAAC,aAAa,EAACH,IAAI,CAAC;IAC/B;IACAS,SAAS,CAAC,OAAO,CAAC,GAAGT,IAAI,CAACK,IAAI,CAACM,aAAa,CAACD,KAAK;IAClDR,OAAO,CAACC,GAAG,CAAC,aAAa,EAACM,SAAS,CAAC;EACxC;EACA;EACA;EACA;EACA;AACJ,CAAC;AAAA,MApBKD,gBAAgB;AAuBtB,SAAQZ,eAAe,EAACY,gBAAgB;AAAE;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}