{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Desktop/Shreyansh/ReactJS/tictaktoe/src/component/data/MultiPlayer.jsx\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport Main from '../screen/main';\nimport CheckFunc from './CheckFunc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arrayOfElement = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '];\nvar choice = \"X\";\nvar steps = 0;\nconst winning = [[0, 4, 8], [2, 4, 6], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 1, 2], [3, 4, 5], [6, 7, 8]];\nfunction checkStatus() {\n  steps += 1;\n  let gameStatus = true;\n  if (steps > 4 && gameStatus === true) {\n    for (let i = 0; i < 8; i++) {\n      for (let element in winning) {\n        console.log(winning[element]);\n        let winningCondition = winning[element];\n        // if (winning[element] in arrayOfElement === \"X\" || winning[element] in arrayOfElement === \"O\"  ){\n        //     console.warn(\"Game Over\")\n        //     debugger    \n        //     break\n        // }\n        // for(let j in winningCondition){\n        // debugger\n        let finalCondition = winningCondition;\n        if (arrayOfElement[winningCondition[0]] === \"X\" && arrayOfElement[winningCondition[1]] === \"X\" && arrayOfElement[winningCondition[2]] === \"X\") {\n          debugger;\n          // return(Main(\"true\",arrayOfElement))\n          console.warn(\"X Wonnnn\");\n          gameStatus = false;\n          alert(\"Game Over!...X Won...\");\n          return /*#__PURE__*/_jsxDEV(Main, {\n            setCheck: \"X won\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 32\n          }, this);\n          break;\n        } else if (arrayOfElement[winningCondition[0]] === \"O\" && arrayOfElement[winningCondition[1]] === \"O\" && arrayOfElement[winningCondition[2]] === \"O\") {\n          debugger;\n          // return(Main(\"true\",arrayOfElement))\n          console.warn(\"O Wonnnn\");\n          gameStatus = false;\n          alert(\"Game Over!...O Won...\");\n          return /*#__PURE__*/_jsxDEV(Main, {\n            setCheck: \"O won\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 32\n          }, this);\n          break;\n        } else if (steps === 9) {\n          console.warn(\"X Not at\", [arrayOfElement]);\n          gameStatus = false;\n          alert(\"Game Draw!!!!\");\n          // debugger\n          // break\n        }\n        // else if (winningCondition[j]===\"O\"){\n        //     console.warn(\"OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\")\n        //     alert(\"Game Over!....OOOO Won\")\n        //     break\n        // }\n        // debugger\n        // console.log(\"Winning Condition....\")\n        // gameStatus = false\n      }\n    }\n    // debugger\n  }\n}\n\n// }\n\nfunction MultiPlayer(props) {\n  debugger;\n  arrayOfElement[props] = choice;\n  if (choice === \"X\") {\n    choice = \"O\";\n  } else {\n    choice = \"X\";\n  }\n  debugger;\n  checkStatus();\n  return Main(\"multi_player\", arrayOfElement)\n  // <>\n  // <Main newData={arrayOfElement}/>\n  // </>\n  ;\n}\n_c = MultiPlayer;\nexport default MultiPlayer;\nvar _c;\n$RefreshReg$(_c, \"MultiPlayer\");","map":{"version":3,"names":["render","React","Main","CheckFunc","arrayOfElement","choice","steps","winning","checkStatus","gameStatus","i","element","console","log","winningCondition","finalCondition","warn","alert","MultiPlayer","props"],"sources":["/home/freedom/Desktop/Shreyansh/ReactJS/tictaktoe/src/component/data/MultiPlayer.jsx"],"sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\nimport Main from '../screen/main';\nimport CheckFunc from './CheckFunc';\n\n\nconst arrayOfElement = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']\nvar choice = \"X\"\nvar steps = 0\nconst winning = [[0,4,8],[2,4,6],[0,3,6],[1,4,7],[2,5,8],[0,1,2],[3,4,5],[6,7,8]] \nfunction checkStatus () {\n    steps += 1\n    let gameStatus = true\n    if (steps>4 && gameStatus === true){\n        for (let i = 0; i<8;i++){\n            for (let element in winning){\n                console.log(winning[element])\n                let winningCondition = winning[element]\n                // if (winning[element] in arrayOfElement === \"X\" || winning[element] in arrayOfElement === \"O\"  ){\n                //     console.warn(\"Game Over\")\n                //     debugger    \n                //     break\n                // }\n                // for(let j in winningCondition){\n                    // debugger\n                    let finalCondition = winningCondition\n                    if (arrayOfElement[winningCondition[0]] === \"X\" && arrayOfElement[winningCondition[1]] === \"X\" && arrayOfElement[winningCondition[2]] === \"X\" ){\n                        debugger\n                        // return(Main(\"true\",arrayOfElement))\n                        console.warn(\"X Wonnnn\" )\n                        gameStatus = false\n                        alert(\"Game Over!...X Won...\")\n                        return(<Main setCheck={\"X won\"}/>)\n                        break\n                    }\n                    else if (arrayOfElement[winningCondition[0]] === \"O\" && arrayOfElement[winningCondition[1]] === \"O\" && arrayOfElement[winningCondition[2]] === \"O\" ){\n                        debugger\n                        // return(Main(\"true\",arrayOfElement))\n                        console.warn(\"O Wonnnn\" )\n                        gameStatus = false\n                        alert(\"Game Over!...O Won...\")\n                        return(<Main setCheck={\"O won\"}/>)\n                        break\n                    }\n                    else if (steps===9){\n                        console.warn(\"X Not at\", [arrayOfElement])\n                        gameStatus = false\n                        alert(\"Game Draw!!!!\")\n                        // debugger\n                        // break\n                    }\n                    // else if (winningCondition[j]===\"O\"){\n                    //     console.warn(\"OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\")\n                    //     alert(\"Game Over!....OOOO Won\")\n                    //     break\n                    // }\n                    // debugger\n                    // console.log(\"Winning Condition....\")\n                    // gameStatus = false\n                }\n\n            }\n            // debugger\n        }\n    }\n\n// }\n\n\nfunction MultiPlayer (props) {\n    debugger\n    arrayOfElement[props] = choice\n    if (choice===\"X\"){\n        choice = \"O\"\n    }\n    else{\n        choice=\"X\"\n    }\n    debugger\n    checkStatus()\n    return(\n        Main(\"multi_player\",arrayOfElement)\n        // <>\n        // <Main newData={arrayOfElement}/>\n        // </>\n    )\n    \n}\n\nexport default MultiPlayer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}